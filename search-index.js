crystal_doc_search_index_callback({"repository_name":"github.com/j8r/libcrown","body":"# Libcrown\n\n[![Build Status](https://cloud.drone.io/api/badges/j8r/libcrown/status.svg)](https://cloud.drone.io/j8r/libcrown)\n[![ISC](https://img.shields.io/badge/License-ISC-blue.svg?style=flat-square)](https://en.wikipedia.org/wiki/ISC_license)\n\nLibrary for Unix users, groups and passwords manipulation.\n\nCan be used to perform actions in Crystal usually done by commands like `adduser`, `deluser`.\n\n## Warning\n\nBy essence, manipulating system users, groups and passwords is sensitive. Be careful and be sure of what you do before any action.\n\nThis library is provided \"as is\", with no warranties, as stated in the [ISC LICENSE](LICENSE).\n\n## Installation\n\nAdd the dependency to your `shard.yml`:\n\n```yaml\ndependencies:\n  libcrown:\n    github: j8r/libcrown\n```\n\n## Documentation\n\nhttps://j8r.github.io/libcrown\n\n## Usage\n\nTo add a new user\n\n```crystal\nrequire \"libcrown\"\n\n# Root permissions are needed\nlibcrown = Libcrown.new\n\n# Add a new group\nlibcrown.add_group Libcrown::Group.new(\"new_group\"), 100_u32\n\n# Add a new user with `new_group` as its main group\nnew_user = Libcrown::User.new(\n  name:           \"new_user\",\n  gid:            100_u32,\n  full_name:      \"New Usser\",\n  home_directory: \"/home/new_user\",\n  login_shell:    \"/bin/sh\",\n)\nlibcrown.add_user new_user\n\n# Save the modifications to the disk\nlibcrown.write\n```\n\n## License\n\nCopyright (c) 2018-2019 Julien Reichardt - ISC License\n","program":{"html_id":"github.com/j8r/libcrown/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/j8r/libcrown","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/j8r/libcrown/Libcrown","path":"Libcrown.html","kind":"struct","full_name":"Libcrown","name":"Libcrown","abstract":false,"superclass":{"html_id":"github.com/j8r/libcrown/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/j8r/libcrown/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/j8r/libcrown/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/j8r/libcrown/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"password_state.cr","line_number":1,"url":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password_state.cr"},{"filename":"libcrown.cr","line_number":29,"url":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr"}],"repository_name":"github.com/j8r/libcrown","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Safe High level API to manipulate users, groups and passwords from /etc/passwd, /etc/group and /etc/shadow.\n\nIt's highly recommended to use this wrapper for any manipulation. `users`, `groups` and `passwords`\ngetters have to be considered read-only.\n\n```crystal\nrequire \"libcrown\"\n\n# Root permissions are needed\nlibcrown = Libcrown.new\n\n# Add a new group\nlibcrown.add_group Libcrown::Group.new(\"new_group\"), 100_u32\n\n# Add a new user with `new_group` as its main group\nnew_user = Libcrown::User.new(\n  name: \"new_user\",\n  gid: 100_u32,\n  gecos_comment: \"This is a newly created user\",\n  home_directory: \"/home/new_user\",\n  login_shell: \"/bin/sh\",\n)\nlibcrown.add_user new_user\n\n# Save the modifications to the disk\nlibcrown.write\n```\n","summary":"<p>Safe High level API to manipulate users, groups and passwords from /etc/passwd, /etc/group and /etc/shadow.</p>","class_methods":[{"id":"validate_name(name:String):Nil-class-method","html_id":"validate_name(name:String):Nil-class-method","name":"validate_name","doc":"Validates a name for use as user or group name.","summary":"<p>Validates a name for use as user or group name.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : Nil","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L91","def":{"name":"validate_name","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if name.starts_with?('-')\n  raise(\"the name can't start with a dash `-`: \" + name)\nend\nsize = 0\nname.each_char do |char|\n  size = size + 1\n  if size > 255\n    raise(\"the name has more than 255 characters: \" + name)\n  end\n  case char\n  when '.', '_', '-', .ascii_alphanumeric?\n  else\n    raise(\"invalid character: \" + char)\n  end\nend\n"}}],"constructors":[{"id":"new(shadow_file:Path?=Path[&quot;/etc/shadow&quot;],passwd_file:Path?=Path[&quot;/etc/passwd&quot;],group_file:Path?=Path[&quot;/etc/group&quot;])-class-method","html_id":"new(shadow_file:Path?=Path[&amp;quot;/etc/shadow&amp;quot;],passwd_file:Path?=Path[&amp;quot;/etc/passwd&amp;quot;],group_file:Path?=Path[&amp;quot;/etc/group&amp;quot;])-class-method","name":"new","doc":"Requires root permissions to read the shadow file and write passwd and group files\nAs non-root, to only read passwd and group files\n```crystal\nlibcrown = Libcrown.new nil\n```\n","summary":"<p>Requires root permissions to read the shadow file and write passwd and group files As non-root, to only read passwd and group files <code></code>`crystal libcrown = Libcrown.new nil <code></code>` </p>","abstract":false,"args":[{"name":"shadow_file","doc":null,"default_value":"Path[\"/etc/shadow\"]","external_name":"shadow_file","restriction":"Path | ::Nil"},{"name":"passwd_file","doc":null,"default_value":"Path[\"/etc/passwd\"]","external_name":"passwd_file","restriction":"Path | ::Nil"},{"name":"group_file","doc":null,"default_value":"Path[\"/etc/group\"]","external_name":"group_file","restriction":"Path | ::Nil"}],"args_string":"(shadow_file : Path? = <span class=\"t\">Path</span>[<span class=\"s\">&quot;/etc/shadow&quot;</span>], passwd_file : Path? = <span class=\"t\">Path</span>[<span class=\"s\">&quot;/etc/passwd&quot;</span>], group_file : Path? = <span class=\"t\">Path</span>[<span class=\"s\">&quot;/etc/group&quot;</span>])","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L49","def":{"name":"new","args":[{"name":"shadow_file","doc":null,"default_value":"Path[\"/etc/shadow\"]","external_name":"shadow_file","restriction":"Path | ::Nil"},{"name":"passwd_file","doc":null,"default_value":"Path[\"/etc/passwd\"]","external_name":"passwd_file","restriction":"Path | ::Nil"},{"name":"group_file","doc":null,"default_value":"Path[\"/etc/group\"]","external_name":"group_file","restriction":"Path | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(shadow_file, passwd_file, group_file)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(shadow:String=&quot;&quot;,passwd:String=&quot;&quot;,group:String=&quot;&quot;)-class-method","html_id":"new(shadow:String=&amp;quot;&amp;quot;,passwd:String=&amp;quot;&amp;quot;,group:String=&amp;quot;&amp;quot;)-class-method","name":"new","doc":"Parse shadow, passwd and group files from strings.","summary":"<p>Parse shadow, passwd and group files from strings.</p>","abstract":false,"args":[{"name":"shadow","doc":null,"default_value":"\"\"","external_name":"shadow","restriction":"String"},{"name":"passwd","doc":null,"default_value":"\"\"","external_name":"passwd","restriction":"String"},{"name":"group","doc":null,"default_value":"\"\"","external_name":"group","restriction":"String"}],"args_string":"(shadow : String = <span class=\"s\">&quot;&quot;</span>, passwd : String = <span class=\"s\">&quot;&quot;</span>, group : String = <span class=\"s\">&quot;&quot;</span>)","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L73","def":{"name":"new","args":[{"name":"shadow","doc":null,"default_value":"\"\"","external_name":"shadow","restriction":"String"},{"name":"passwd","doc":null,"default_value":"\"\"","external_name":"passwd","restriction":"String"},{"name":"group","doc":null,"default_value":"\"\"","external_name":"group","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(shadow, passwd, group)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_group(group_entry:Group,gid:UInt32=available_gid):UInt32-instance-method","html_id":"add_group(group_entry:Group,gid:UInt32=available_gid):UInt32-instance-method","name":"add_group","doc":"Add a new group.","summary":"<p>Add a new group.</p>","abstract":false,"args":[{"name":"group_entry","doc":null,"default_value":"","external_name":"group_entry","restriction":"Group"},{"name":"gid","doc":null,"default_value":"available_gid","external_name":"gid","restriction":"UInt32"}],"args_string":"(group_entry : Group, gid : UInt32 = available_gid) : UInt32","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L105","def":{"name":"add_group","args":[{"name":"group_entry","doc":null,"default_value":"","external_name":"group_entry","restriction":"Group"},{"name":"gid","doc":null,"default_value":"available_gid","external_name":"gid","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"check_available_group(group_entry.name)\ncheck_available_gid(gid)\n@groups[gid] = group_entry\ngid\n"}},{"id":"add_group_member(uid:UInt32,gid:UInt32):Set(String)-instance-method","html_id":"add_group_member(uid:UInt32,gid:UInt32):Set(String)-instance-method","name":"add_group_member","doc":"Adds/ensure an user is member of the group. Not needed if the group is the main one of the user.","summary":"<p>Adds/ensure an user is member of the group.</p>","abstract":false,"args":[{"name":"uid","doc":null,"default_value":"","external_name":"uid","restriction":"UInt32"},{"name":"gid","doc":null,"default_value":"","external_name":"gid","restriction":"UInt32"}],"args_string":"(uid : UInt32, gid : UInt32) : Set(String)","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L149","def":{"name":"add_group_member","args":[{"name":"uid","doc":null,"default_value":"","external_name":"uid","restriction":"UInt32"},{"name":"gid","doc":null,"default_value":"","external_name":"gid","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Set(String)","visibility":"Public","body":"@groups[gid].users << @users[uid].name"}},{"id":"add_user(user_entry:User,uid:UInt32=available_uid,password_entry:Password=Password.new):UInt32-instance-method","html_id":"add_user(user_entry:User,uid:UInt32=available_uid,password_entry:Password=Password.new):UInt32-instance-method","name":"add_user","doc":"Adds a new user along, to an existing group.","summary":"<p>Adds a new user along, to an existing group.</p>","abstract":false,"args":[{"name":"user_entry","doc":null,"default_value":"","external_name":"user_entry","restriction":"User"},{"name":"uid","doc":null,"default_value":"available_uid","external_name":"uid","restriction":"UInt32"},{"name":"password_entry","doc":null,"default_value":"Password.new","external_name":"password_entry","restriction":"Password"}],"args_string":"(user_entry : User, uid : UInt32 = available_uid, password_entry : Password = <span class=\"t\">Password</span>.<span class=\"k\">new</span>) : UInt32","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L114","def":{"name":"add_user","args":[{"name":"user_entry","doc":null,"default_value":"","external_name":"user_entry","restriction":"User"},{"name":"uid","doc":null,"default_value":"available_uid","external_name":"uid","restriction":"UInt32"},{"name":"password_entry","doc":null,"default_value":"Password.new","external_name":"password_entry","restriction":"Password"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"check_available_user(user_entry.name)\ncheck_available_uid(uid)\nif !(@groups.has_key?(user_entry.gid))\n  raise(\"gid doens't exist: #{user_entry.gid}\")\nend\n@passwords[user_entry.name] = password_entry\n@users[uid] = user_entry\nuid\n"}},{"id":"available_gid(start:UInt32=0_u32):UInt32-instance-method","html_id":"available_gid(start:UInt32=0_u32):UInt32-instance-method","name":"available_gid","doc":"Returns the first available gid.","summary":"<p>Returns the first available gid.</p>","abstract":false,"args":[{"name":"start","doc":null,"default_value":"0_u32","external_name":"start","restriction":"UInt32"}],"args_string":"(start : UInt32 = <span class=\"n\">0_u32</span>) : UInt32","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L173","def":{"name":"available_gid","args":[{"name":"start","doc":null,"default_value":"0_u32","external_name":"start","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"(start..UInt32::MAX).each do |id|\n  if !(groups.has_key?(id))\n    return id\n  end\nend\nraise(\"the limit of #{UInt32::MAX} for gid numbers is reached, no ids available\")\n"}},{"id":"available_id(start:UInt32=0_u32):UInt32-instance-method","html_id":"available_id(start:UInt32=0_u32):UInt32-instance-method","name":"available_id","doc":"Finds the first available user and group id.","summary":"<p>Finds the first available user and group id.</p>","abstract":false,"args":[{"name":"start","doc":null,"default_value":"0_u32","external_name":"start","restriction":"UInt32"}],"args_string":"(start : UInt32 = <span class=\"n\">0_u32</span>) : UInt32","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L224","def":{"name":"available_id","args":[{"name":"start","doc":null,"default_value":"0_u32","external_name":"start","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"uid = available_uid(start)\ngid = available_gid(start)\nif uid == gid\n  return uid\nend\navailable_id({uid, gid}.max)\n"}},{"id":"available_uid(start:UInt32=0_u32):UInt32-instance-method","html_id":"available_uid(start:UInt32=0_u32):UInt32-instance-method","name":"available_uid","doc":"Returns the first available uid.","summary":"<p>Returns the first available uid.</p>","abstract":false,"args":[{"name":"start","doc":null,"default_value":"0_u32","external_name":"start","restriction":"UInt32"}],"args_string":"(start : UInt32 = <span class=\"n\">0_u32</span>) : UInt32","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L173","def":{"name":"available_uid","args":[{"name":"start","doc":null,"default_value":"0_u32","external_name":"start","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"(start..UInt32::MAX).each do |id|\n  if !(users.has_key?(id))\n    return id\n  end\nend\nraise(\"the limit of #{UInt32::MAX} for uid numbers is reached, no ids available\")\n"}},{"id":"build_group:String-instance-method","html_id":"build_group:String-instance-method","name":"build_group","doc":"Builds `groups` to group.","summary":"<p>Builds <code><a href=\"Libcrown.html#groups:Hash(UInt32,Group)-instance-method\">#groups</a></code> to group.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L264","def":{"name":"build_group","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"build(@groups)"}},{"id":"build_passwd:String-instance-method","html_id":"build_passwd:String-instance-method","name":"build_passwd","doc":"Builds `users` to passwd.","summary":"<p>Builds <code><a href=\"Libcrown.html#users:Hash(UInt32,User)-instance-method\">#users</a></code> to passwd.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L259","def":{"name":"build_passwd","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"build(@users)"}},{"id":"build_shadow:String-instance-method","html_id":"build_shadow:String-instance-method","name":"build_shadow","doc":"Builds `passwords` to shadow.","summary":"<p>Builds <code><a href=\"Libcrown.html#passwords:Hash(String,Password)-instance-method\">#passwords</a></code> to shadow.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L254","def":{"name":"build_shadow","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"build(@passwords)"}},{"id":"change_password(uid:UInt32,password:Password):Password-instance-method","html_id":"change_password(uid:UInt32,password:Password):Password-instance-method","name":"change_password","doc":"Change the user's password entry.","summary":"<p>Change the user's password entry.</p>","abstract":false,"args":[{"name":"uid","doc":null,"default_value":"","external_name":"uid","restriction":"UInt32"},{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"Password"}],"args_string":"(uid : UInt32, password : Password) : Password","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L169","def":{"name":"change_password","args":[{"name":"uid","doc":null,"default_value":"","external_name":"uid","restriction":"UInt32"},{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"Password"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Password","visibility":"Public","body":"@password[@users[uid].name] = password"}},{"id":"check_available_gid(id:UInt32):UInt32-instance-method","html_id":"check_available_gid(id:UInt32):UInt32-instance-method","name":"check_available_gid","doc":"Raise if the gid is taken.","summary":"<p>Raise if the gid is taken.</p>","abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt32"}],"args_string":"(id : UInt32) : UInt32","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L173","def":{"name":"check_available_gid","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"if existing_entry = groups[id]?\n  raise(\"gid #{id} already taken: #{existing_entry.name}\")\nend\nid\n"}},{"id":"check_available_group(name:String):String-instance-method","html_id":"check_available_group(name:String):String-instance-method","name":"check_available_group","doc":"Raise if the group name is taken.","summary":"<p>Raise if the group name is taken.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : String","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L173","def":{"name":"check_available_group","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"if id = to_gid?(name)\n  raise(\"group name `#{name}` already taken: #{id}\")\nend\nname\n"}},{"id":"check_available_id(id:UInt32):UInt32-instance-method","html_id":"check_available_id(id:UInt32):UInt32-instance-method","name":"check_available_id","doc":"Raise if an id is taken.","summary":"<p>Raise if an id is taken.</p>","abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt32"}],"args_string":"(id : UInt32) : UInt32","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L239","def":{"name":"check_available_id","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"check_available_gid(id)\ncheck_available_uid(id)\n"}},{"id":"check_available_name(name:String):String-instance-method","html_id":"check_available_name(name:String):String-instance-method","name":"check_available_name","doc":"Raise if the name is taken.","summary":"<p>Raise if the name is taken.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : String","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L233","def":{"name":"check_available_name","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"check_available_user(name)\ncheck_available_group(name)\n"}},{"id":"check_available_uid(id:UInt32):UInt32-instance-method","html_id":"check_available_uid(id:UInt32):UInt32-instance-method","name":"check_available_uid","doc":"Raise if the uid is taken.","summary":"<p>Raise if the uid is taken.</p>","abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt32"}],"args_string":"(id : UInt32) : UInt32","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L173","def":{"name":"check_available_uid","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"if existing_entry = users[id]?\n  raise(\"uid #{id} already taken: #{existing_entry.name}\")\nend\nid\n"}},{"id":"check_available_user(name:String):String-instance-method","html_id":"check_available_user(name:String):String-instance-method","name":"check_available_user","doc":"Raise if the user name is taken.","summary":"<p>Raise if the user name is taken.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : String","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L173","def":{"name":"check_available_user","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"if id = to_uid?(name)\n  raise(\"user name `#{name}` already taken: #{id}\")\nend\nname\n"}},{"id":"del_group(gid:UInt32):Group?-instance-method","html_id":"del_group(gid:UInt32):Group?-instance-method","name":"del_group","doc":"Deletes a group.","summary":"<p>Deletes a group.</p>","abstract":false,"args":[{"name":"gid","doc":null,"default_value":"","external_name":"gid","restriction":"UInt32"}],"args_string":"(gid : UInt32) : Group?","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L124","def":{"name":"del_group","args":[{"name":"gid","doc":null,"default_value":"","external_name":"gid","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Group | ::Nil","visibility":"Public","body":"@users.each do |id, entry|\n  if entry.gid == gid\n    raise(\"the group #{gid} is still the primary one of the user #{id}\")\n  end\nend\n@groups.delete(gid)\n"}},{"id":"del_group_member(uid:UInt32,gid:UInt32):Set(String)-instance-method","html_id":"del_group_member(uid:UInt32,gid:UInt32):Set(String)-instance-method","name":"del_group_member","doc":"Delete?/ensure an user isn't a member of the group.","summary":"<p>Delete?/ensure an user isn't a member of the group.</p>","abstract":false,"args":[{"name":"uid","doc":null,"default_value":"","external_name":"uid","restriction":"UInt32"},{"name":"gid","doc":null,"default_value":"","external_name":"gid","restriction":"UInt32"}],"args_string":"(uid : UInt32, gid : UInt32) : Set(String)","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L154","def":{"name":"del_group_member","args":[{"name":"uid","doc":null,"default_value":"","external_name":"uid","restriction":"UInt32"},{"name":"gid","doc":null,"default_value":"","external_name":"gid","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Set(String)","visibility":"Public","body":"@groups[gid].users.delete(@users[uid].name)"}},{"id":"del_user(uid:UInt32,del_group:Bool=false):User?-instance-method","html_id":"del_user(uid:UInt32,del_group:Bool=false):User?-instance-method","name":"del_user","doc":"Delete an user and optionally with its main group, returns the deleted `User`.","summary":"<p>Delete an user and optionally with its main group, returns the deleted <code><a href=\"Libcrown/User.html\">User</a></code>.</p>","abstract":false,"args":[{"name":"uid","doc":null,"default_value":"","external_name":"uid","restriction":"UInt32"},{"name":"del_group","doc":null,"default_value":"false","external_name":"del_group","restriction":"Bool"}],"args_string":"(uid : UInt32, del_group : Bool = <span class=\"n\">false</span>) : User?","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L132","def":{"name":"del_user","args":[{"name":"uid","doc":null,"default_value":"","external_name":"uid","restriction":"UInt32"},{"name":"del_group","doc":null,"default_value":"false","external_name":"del_group","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"User | ::Nil","visibility":"Public","body":"if user_entry = @users[uid]?\n  name = user_entry.name\n  gid = user_entry.gid\n  @users.delete(uid)\n  @passwords.delete(name)\n  @groups.each do |id, entry|\n    entry.users.delete(entry.name)\n  end\n  if del_group\n    del_group(gid)\n  end\n  user_entry\nend"}},{"id":"get_password(uid:UInt32):Password-instance-method","html_id":"get_password(uid:UInt32):Password-instance-method","name":"get_password","doc":"Get the user's password entry.","summary":"<p>Get the user's password entry.</p>","abstract":false,"args":[{"name":"uid","doc":null,"default_value":"","external_name":"uid","restriction":"UInt32"}],"args_string":"(uid : UInt32) : Password","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L164","def":{"name":"get_password","args":[{"name":"uid","doc":null,"default_value":"","external_name":"uid","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Password","visibility":"Public","body":"@password[@users[uid].name]"}},{"id":"group_file:Path?-instance-method","html_id":"group_file:Path?-instance-method","name":"group_file","doc":"Group file, commonly stored in `/etc/group`.","summary":"<p>Group file, commonly stored in <code>/etc/group</code>.</p>","abstract":false,"args":[],"args_string":" : Path?","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L41","def":{"name":"group_file","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Path | ::Nil","visibility":"Public","body":"@group_file"}},{"id":"groups:Hash(UInt32,Group)-instance-method","html_id":"groups:Hash(UInt32,Group)-instance-method","name":"groups","doc":"System groups. Modifying it directly is **unsafe**.","summary":"<p>System groups.</p>","abstract":false,"args":[],"args_string":" : Hash(UInt32, Group)","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L35","def":{"name":"groups","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(UInt32, Group)","visibility":"Public","body":"@groups"}},{"id":"passwd_file:Path?-instance-method","html_id":"passwd_file:Path?-instance-method","name":"passwd_file","doc":"User file, commonly stored in `/etc/passwd`.","summary":"<p>User file, commonly stored in <code>/etc/passwd</code>.</p>","abstract":false,"args":[],"args_string":" : Path?","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L39","def":{"name":"passwd_file","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Path | ::Nil","visibility":"Public","body":"@passwd_file"}},{"id":"passwords:Hash(String,Password)-instance-method","html_id":"passwords:Hash(String,Password)-instance-method","name":"passwords","doc":"User's passwords. Modifying it directly is **unsafe**.","summary":"<p>User's passwords.</p>","abstract":false,"args":[],"args_string":" : Hash(String, Password)","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L37","def":{"name":"passwords","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Password)","visibility":"Public","body":"@passwords"}},{"id":"shadow_file:Path?-instance-method","html_id":"shadow_file:Path?-instance-method","name":"shadow_file","doc":"Password file, commonly stored in `/etc/shadow`.","summary":"<p>Password file, commonly stored in <code>/etc/shadow</code>.</p>","abstract":false,"args":[],"args_string":" : Path?","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L43","def":{"name":"shadow_file","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Path | ::Nil","visibility":"Public","body":"@shadow_file"}},{"id":"to_gid(name:String,&block)-instance-method","html_id":"to_gid(name:String,&amp;block)-instance-method","name":"to_gid","doc":"Yields each gid matching the name.","summary":"<p>Yields each gid matching the name.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String, &block)","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L173","def":{"name":"to_gid","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"groups.each do |id, obj|\n  if obj.name == name\n    yield id\n  end\nend"}},{"id":"to_gid(name:String):UInt32-instance-method","html_id":"to_gid(name:String):UInt32-instance-method","name":"to_gid","doc":"Returns an gid matching the name, else raise.","summary":"<p>Returns an gid matching the name, else raise.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : UInt32","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L173","def":{"name":"to_gid","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"match_id = nil\nto_gid(name) do |id|\n  if match_id\n    raise(\"multiple gids match the name #{name}: #{match_id}, #{id}\")\n  end\n  match_id = id\nend\nif !match_id\n  raise(\"no gid match the name: #{name}\")\nend\nmatch_id\n"}},{"id":"to_gid?(name:String):UInt32?-instance-method","html_id":"to_gid?(name:String):UInt32?-instance-method","name":"to_gid?","doc":"Returns an gid matching the name, if any.","summary":"<p>Returns an gid matching the name, if any.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : UInt32?","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L173","def":{"name":"to_gid?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32 | ::Nil","visibility":"Public","body":"to_gid(name) do |id|\n  return id\nend"}},{"id":"to_uid(name:String,&block)-instance-method","html_id":"to_uid(name:String,&amp;block)-instance-method","name":"to_uid","doc":"Yields each uid matching the name.","summary":"<p>Yields each uid matching the name.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String, &block)","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L173","def":{"name":"to_uid","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"users.each do |id, obj|\n  if obj.name == name\n    yield id\n  end\nend"}},{"id":"to_uid(name:String):UInt32-instance-method","html_id":"to_uid(name:String):UInt32-instance-method","name":"to_uid","doc":"Returns an uid matching the name, else raise.","summary":"<p>Returns an uid matching the name, else raise.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : UInt32","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L173","def":{"name":"to_uid","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"match_id = nil\nto_uid(name) do |id|\n  if match_id\n    raise(\"multiple uids match the name #{name}: #{match_id}, #{id}\")\n  end\n  match_id = id\nend\nif !match_id\n  raise(\"no uid match the name: #{name}\")\nend\nmatch_id\n"}},{"id":"to_uid?(name:String):UInt32?-instance-method","html_id":"to_uid?(name:String):UInt32?-instance-method","name":"to_uid?","doc":"Returns an uid matching the name, if any.","summary":"<p>Returns an uid matching the name, if any.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : UInt32?","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L173","def":{"name":"to_uid?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32 | ::Nil","visibility":"Public","body":"to_uid(name) do |id|\n  return id\nend"}},{"id":"user_group_member?(uid:UInt32,gid:UInt32):Bool-instance-method","html_id":"user_group_member?(uid:UInt32,gid:UInt32):Bool-instance-method","name":"user_group_member?","doc":"Returns `true` if the user is a member of the group or if the group is primary one of the user.","summary":"<p>Returns <code>true</code> if the user is a member of the group or if the group is primary one of the user.</p>","abstract":false,"args":[{"name":"uid","doc":null,"default_value":"","external_name":"uid","restriction":"UInt32"},{"name":"gid","doc":null,"default_value":"","external_name":"gid","restriction":"UInt32"}],"args_string":"(uid : UInt32, gid : UInt32) : Bool","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L159","def":{"name":"user_group_member?","args":[{"name":"uid","doc":null,"default_value":"","external_name":"uid","restriction":"UInt32"},{"name":"gid","doc":null,"default_value":"","external_name":"gid","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(@users[uid].gid == gid) || (@groups[gid].users.includes?(@users[uid].name))"}},{"id":"users:Hash(UInt32,User)-instance-method","html_id":"users:Hash(UInt32,User)-instance-method","name":"users","doc":"System users. Modifying it directly is **unsafe**.","summary":"<p>System users.</p>","abstract":false,"args":[],"args_string":" : Hash(UInt32, User)","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L33","def":{"name":"users","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(UInt32, User)","visibility":"Public","body":"@users"}},{"id":"write:Nil-instance-method","html_id":"write:Nil-instance-method","name":"write","doc":"Save the state by writing the files to the file system.","summary":"<p>Save the state by writing the files to the file system.</p>","abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/libcrown.cr#L269","def":{"name":"write","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if shadow_file = @shadow_file\n  File.write(shadow_file.to_s, build_shadow)\nend\nif passwd_file = @passwd_file\n  File.write(passwd_file.to_s, build_passwd)\nend\nif group_file = @group_file\n  File.write(group_file.to_s, build_group)\nend\n"}}],"macros":[],"types":[{"html_id":"github.com/j8r/libcrown/Libcrown/Group","path":"Libcrown/Group.html","kind":"struct","full_name":"Libcrown::Group","name":"Group","abstract":false,"superclass":{"html_id":"github.com/j8r/libcrown/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/j8r/libcrown/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/j8r/libcrown/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/j8r/libcrown/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"group.cr","line_number":4,"url":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/group.cr"}],"repository_name":"github.com/j8r/libcrown","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/j8r/libcrown/Libcrown","kind":"struct","full_name":"Libcrown","name":"Libcrown"},"doc":"Represents a password line of `/etc/group`.","summary":"<p>Represents a password line of <code>/etc/group</code>.</p>","class_methods":[],"constructors":[{"id":"new(name:String,users:Set(String)=Set(String).new,password:PasswordState=PasswordState::Hashed)-class-method","html_id":"new(name:String,users:Set(String)=Set(String).new,password:PasswordState=PasswordState::Hashed)-class-method","name":"new","doc":"Creates a new group.","summary":"<p>Creates a new group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"users","doc":null,"default_value":"Set(String).new","external_name":"users","restriction":"Set(String)"},{"name":"password","doc":null,"default_value":"PasswordState::Hashed","external_name":"password","restriction":"PasswordState"}],"args_string":"(name : String, users : Set(String) = <span class=\"t\">Set</span>(<span class=\"t\">String</span>).<span class=\"k\">new</span>, password : PasswordState = <span class=\"t\">PasswordState</span><span class=\"t\">::</span><span class=\"t\">Hashed</span>)","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/group.cr#L19","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"users","doc":null,"default_value":"Set(String).new","external_name":"users","restriction":"Set(String)"},{"name":"password","doc":null,"default_value":"PasswordState::Hashed","external_name":"password","restriction":"PasswordState"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, users, password)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":"Unique group name.","summary":"<p>Unique group name.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/group.cr#L8","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"name=(name:String):String-instance-method","html_id":"name=(name:String):String-instance-method","name":"name=","doc":"Unique group name.","summary":"<p>Unique group name.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : String","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/group.cr#L9","def":{"name":"name=","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name = name\nLibcrown.validate_name(@name)\n"}},{"id":"password:PasswordState-instance-method","html_id":"password:PasswordState-instance-method","name":"password","doc":"Generally unused empty/blank password (set to `PasswordState::Hashed`).","summary":"<p>Generally unused empty/blank password (set to <code><a href=\"../Libcrown/PasswordState.html#Hashed\">PasswordState::Hashed</a></code>).</p>","abstract":false,"args":[],"args_string":" : PasswordState","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/group.cr#L18","def":{"name":"password","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"PasswordState","visibility":"Public","body":"@password"}},{"id":"password=(password:PasswordState)-instance-method","html_id":"password=(password:PasswordState)-instance-method","name":"password=","doc":"Generally unused empty/blank password (set to `PasswordState::Hashed`).","summary":"<p>Generally unused empty/blank password (set to <code><a href=\"../Libcrown/PasswordState.html#Hashed\">PasswordState::Hashed</a></code>).</p>","abstract":false,"args":[{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"PasswordState"}],"args_string":"(password : PasswordState)","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/group.cr#L22","def":{"name":"password=","args":[{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"PasswordState"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@password = password"}},{"id":"users:Set(String)-instance-method","html_id":"users:Set(String)-instance-method","name":"users","doc":"Users who are members of the group.","summary":"<p>Users who are members of the group.</p>","abstract":false,"args":[],"args_string":" : Set(String)","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/group.cr#L16","def":{"name":"users","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Set(String)","visibility":"Public","body":"@users"}},{"id":"users=(users:Set(String))-instance-method","html_id":"users=(users:Set(String))-instance-method","name":"users=","doc":"Users who are members of the group.","summary":"<p>Users who are members of the group.</p>","abstract":false,"args":[{"name":"users","doc":null,"default_value":"","external_name":"users","restriction":"Set(String)"}],"args_string":"(users : Set(String))","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/group.cr#L20","def":{"name":"users=","args":[{"name":"users","doc":null,"default_value":"","external_name":"users","restriction":"Set(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@users = users"}}],"macros":[],"types":[]},{"html_id":"github.com/j8r/libcrown/Libcrown/Password","path":"Libcrown/Password.html","kind":"struct","full_name":"Libcrown::Password","name":"Password","abstract":false,"superclass":{"html_id":"github.com/j8r/libcrown/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/j8r/libcrown/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/j8r/libcrown/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/j8r/libcrown/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"password.cr","line_number":4,"url":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr"}],"repository_name":"github.com/j8r/libcrown","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/j8r/libcrown/Libcrown","kind":"struct","full_name":"Libcrown","name":"Libcrown"},"doc":"Represents a password line of `/etc/shadow`.","summary":"<p>Represents a password line of <code>/etc/shadow</code>.</p>","class_methods":[],"constructors":[{"id":"new(crypto:Encryption=Encryption::PasswordLocked,salt:String?=nil,hash:String?=nil,days_last_change:UInt32?=nil,days_before_change:UInt32?=0_u32,days_validity:UInt32?=99999_u32,days_expiration_warning:UInt32?=7_u32,days_account_disabling_after_expiration:UInt32?=nil,days_since_account_disabling:UInt32?=nil)-class-method","html_id":"new(crypto:Encryption=Encryption::PasswordLocked,salt:String?=nil,hash:String?=nil,days_last_change:UInt32?=nil,days_before_change:UInt32?=0_u32,days_validity:UInt32?=99999_u32,days_expiration_warning:UInt32?=7_u32,days_account_disabling_after_expiration:UInt32?=nil,days_since_account_disabling:UInt32?=nil)-class-method","name":"new","doc":"Creates a new password.","summary":"<p>Creates a new password.</p>","abstract":false,"args":[{"name":"crypto","doc":null,"default_value":"Encryption::PasswordLocked","external_name":"crypto","restriction":"Encryption"},{"name":"salt","doc":null,"default_value":"nil","external_name":"salt","restriction":"String | ::Nil"},{"name":"hash","doc":null,"default_value":"nil","external_name":"hash","restriction":"String | ::Nil"},{"name":"days_last_change","doc":null,"default_value":"nil","external_name":"days_last_change","restriction":"UInt32 | ::Nil"},{"name":"days_before_change","doc":null,"default_value":"0_u32","external_name":"days_before_change","restriction":"UInt32 | ::Nil"},{"name":"days_validity","doc":null,"default_value":"99999_u32","external_name":"days_validity","restriction":"UInt32 | ::Nil"},{"name":"days_expiration_warning","doc":null,"default_value":"7_u32","external_name":"days_expiration_warning","restriction":"UInt32 | ::Nil"},{"name":"days_account_disabling_after_expiration","doc":null,"default_value":"nil","external_name":"days_account_disabling_after_expiration","restriction":"UInt32 | ::Nil"},{"name":"days_since_account_disabling","doc":null,"default_value":"nil","external_name":"days_since_account_disabling","restriction":"UInt32 | ::Nil"}],"args_string":"(crypto : Encryption = <span class=\"t\">Encryption</span><span class=\"t\">::</span><span class=\"t\">PasswordLocked</span>, salt : String? = <span class=\"n\">nil</span>, hash : String? = <span class=\"n\">nil</span>, days_last_change : UInt32? = <span class=\"n\">nil</span>, days_before_change : UInt32? = <span class=\"n\">0_u32</span>, days_validity : UInt32? = <span class=\"n\">99999_u32</span>, days_expiration_warning : UInt32? = <span class=\"n\">7_u32</span>, days_account_disabling_after_expiration : UInt32? = <span class=\"n\">nil</span>, days_since_account_disabling : UInt32? = <span class=\"n\">nil</span>)","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr#L25","def":{"name":"new","args":[{"name":"crypto","doc":null,"default_value":"Encryption::PasswordLocked","external_name":"crypto","restriction":"Encryption"},{"name":"salt","doc":null,"default_value":"nil","external_name":"salt","restriction":"String | ::Nil"},{"name":"hash","doc":null,"default_value":"nil","external_name":"hash","restriction":"String | ::Nil"},{"name":"days_last_change","doc":null,"default_value":"nil","external_name":"days_last_change","restriction":"UInt32 | ::Nil"},{"name":"days_before_change","doc":null,"default_value":"0_u32","external_name":"days_before_change","restriction":"UInt32 | ::Nil"},{"name":"days_validity","doc":null,"default_value":"99999_u32","external_name":"days_validity","restriction":"UInt32 | ::Nil"},{"name":"days_expiration_warning","doc":null,"default_value":"7_u32","external_name":"days_expiration_warning","restriction":"UInt32 | ::Nil"},{"name":"days_account_disabling_after_expiration","doc":null,"default_value":"nil","external_name":"days_account_disabling_after_expiration","restriction":"UInt32 | ::Nil"},{"name":"days_since_account_disabling","doc":null,"default_value":"nil","external_name":"days_since_account_disabling","restriction":"UInt32 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(crypto, salt, hash, days_last_change, days_before_change, days_validity, days_expiration_warning, days_account_disabling_after_expiration, days_since_account_disabling)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(password:String,crypto:Encryption=Encryption::SHA512,salt:String?=Random::Secure.base64.rchop.rchop,days_last_change:UInt32?=(Time.utc-Time::UNIX_EPOCH).days.to_u32)-class-method","html_id":"new(password:String,crypto:Encryption=Encryption::SHA512,salt:String?=Random::Secure.base64.rchop.rchop,days_last_change:UInt32?=(Time.utc-Time::UNIX_EPOCH).days.to_u32)-class-method","name":"new","doc":"Create a new encrypted password.","summary":"<p>Create a new encrypted password.</p>","abstract":false,"args":[{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"String"},{"name":"crypto","doc":null,"default_value":"Encryption::SHA512","external_name":"crypto","restriction":"Encryption"},{"name":"salt","doc":null,"default_value":"Random::Secure.base64.rchop.rchop","external_name":"salt","restriction":"String | ::Nil"},{"name":"days_last_change","doc":null,"default_value":"(Time.utc - Time::UNIX_EPOCH).days.to_u32","external_name":"days_last_change","restriction":"UInt32 | ::Nil"}],"args_string":"(password : String, crypto : Encryption = <span class=\"t\">Encryption</span><span class=\"t\">::</span><span class=\"t\">SHA512</span>, salt : String? = <span class=\"t\">Random</span><span class=\"t\">::</span><span class=\"t\">Secure</span>.base64.rchop.rchop, days_last_change : UInt32? = (<span class=\"t\">Time</span>.utc <span class=\"o\">-</span> <span class=\"t\">Time</span><span class=\"t\">::</span><span class=\"t\">UNIX_EPOCH</span>).days.to_u32)","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr#L80","def":{"name":"new","args":[{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"String"},{"name":"crypto","doc":null,"default_value":"Encryption::SHA512","external_name":"crypto","restriction":"Encryption"},{"name":"salt","doc":null,"default_value":"Random::Secure.base64.rchop.rchop","external_name":"salt","restriction":"String | ::Nil"},{"name":"days_last_change","doc":null,"default_value":"(Time.utc - Time::UNIX_EPOCH).days.to_u32","external_name":"days_last_change","restriction":"UInt32 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"crypto_salt = crypto.build + salt.to_s\nhash = (String.new(LibC.crypt(password, crypto_salt))).lstrip(crypto_salt)\nnew(crypto, salt, hash, days_last_change)\n"}}],"instance_methods":[{"id":"build(user:String,io:IO):Nil-instance-method","html_id":"build(user:String,io:IO):Nil-instance-method","name":"build","doc":"Build the password to the given `io`.","summary":"<p>Build the password to the given <code>io</code>.</p>","abstract":false,"args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":"String"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(user : String, io : IO) : Nil","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr#L92","def":{"name":"build","args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":"String"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"(io << user) << ':'\nif @crypto\n  io << @crypto.build\nend\nif @salt\n  (io << @salt) << '$'\nend\nif @hash\n  (io << @hash) << ':'\nend\n(io << @days_last_change) << ':'\n(io << @days_before_change) << ':'\n(io << @days_validity) << ':'\n(io << @days_expiration_warning) << ':'\n(io << @days_account_disabling_after_expiration) << ':'\n(io << @days_since_account_disabling) << ':'\n"}},{"id":"crypto:Encryption-instance-method","html_id":"crypto:Encryption-instance-method","name":"crypto","doc":"Encryption type.","summary":"<p>Encryption type.</p>","abstract":false,"args":[],"args_string":" : Encryption","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr#L8","def":{"name":"crypto","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Encryption","visibility":"Public","body":"@crypto"}},{"id":"days_account_disabling_after_expiration:UInt32?-instance-method","html_id":"days_account_disabling_after_expiration:UInt32?-instance-method","name":"days_account_disabling_after_expiration","doc":"The number of days after a password expires before the account will be disabled.","summary":"<p>The number of days after a password expires before the account will be disabled.</p>","abstract":false,"args":[],"args_string":" : UInt32?","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr#L22","def":{"name":"days_account_disabling_after_expiration","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32 | ::Nil","visibility":"Public","body":"@days_account_disabling_after_expiration"}},{"id":"days_account_disabling_after_expiration=(days_account_disabling_after_expiration:UInt32?)-instance-method","html_id":"days_account_disabling_after_expiration=(days_account_disabling_after_expiration:UInt32?)-instance-method","name":"days_account_disabling_after_expiration=","doc":"The number of days after a password expires before the account will be disabled.","summary":"<p>The number of days after a password expires before the account will be disabled.</p>","abstract":false,"args":[{"name":"days_account_disabling_after_expiration","doc":null,"default_value":"","external_name":"days_account_disabling_after_expiration","restriction":"UInt32 | ::Nil"}],"args_string":"(days_account_disabling_after_expiration : UInt32?)","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr#L26","def":{"name":"days_account_disabling_after_expiration=","args":[{"name":"days_account_disabling_after_expiration","doc":null,"default_value":"","external_name":"days_account_disabling_after_expiration","restriction":"UInt32 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@days_account_disabling_after_expiration = days_account_disabling_after_expiration"}},{"id":"days_before_change:UInt32?-instance-method","html_id":"days_before_change:UInt32?-instance-method","name":"days_before_change","doc":"The minimum number of days that must pass before the password can be changed.","summary":"<p>The minimum number of days that must pass before the password can be changed.</p>","abstract":false,"args":[],"args_string":" : UInt32?","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr#L16","def":{"name":"days_before_change","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32 | ::Nil","visibility":"Public","body":"@days_before_change"}},{"id":"days_before_change=(days_before_change:UInt32?)-instance-method","html_id":"days_before_change=(days_before_change:UInt32?)-instance-method","name":"days_before_change=","doc":"The minimum number of days that must pass before the password can be changed.","summary":"<p>The minimum number of days that must pass before the password can be changed.</p>","abstract":false,"args":[{"name":"days_before_change","doc":null,"default_value":"","external_name":"days_before_change","restriction":"UInt32 | ::Nil"}],"args_string":"(days_before_change : UInt32?)","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr#L20","def":{"name":"days_before_change=","args":[{"name":"days_before_change","doc":null,"default_value":"","external_name":"days_before_change","restriction":"UInt32 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@days_before_change = days_before_change"}},{"id":"days_expiration_warning:UInt32?-instance-method","html_id":"days_expiration_warning:UInt32?-instance-method","name":"days_expiration_warning","doc":"The number of days before password expiration during which the user is warned of the impending expiration.","summary":"<p>The number of days before password expiration during which the user is warned of the impending expiration.</p>","abstract":false,"args":[],"args_string":" : UInt32?","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr#L20","def":{"name":"days_expiration_warning","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32 | ::Nil","visibility":"Public","body":"@days_expiration_warning"}},{"id":"days_expiration_warning=(days_expiration_warning:UInt32?)-instance-method","html_id":"days_expiration_warning=(days_expiration_warning:UInt32?)-instance-method","name":"days_expiration_warning=","doc":"The number of days before password expiration during which the user is warned of the impending expiration.","summary":"<p>The number of days before password expiration during which the user is warned of the impending expiration.</p>","abstract":false,"args":[{"name":"days_expiration_warning","doc":null,"default_value":"","external_name":"days_expiration_warning","restriction":"UInt32 | ::Nil"}],"args_string":"(days_expiration_warning : UInt32?)","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr#L24","def":{"name":"days_expiration_warning=","args":[{"name":"days_expiration_warning","doc":null,"default_value":"","external_name":"days_expiration_warning","restriction":"UInt32 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@days_expiration_warning = days_expiration_warning"}},{"id":"days_last_change:UInt32?-instance-method","html_id":"days_last_change:UInt32?-instance-method","name":"days_last_change","doc":"The number of days since January 1, 1970 (also called the epoch) that the password was last changed.","summary":"<p>The number of days since January 1, 1970 (also called the epoch) that the password was last changed.</p>","abstract":false,"args":[],"args_string":" : UInt32?","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr#L14","def":{"name":"days_last_change","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32 | ::Nil","visibility":"Public","body":"@days_last_change"}},{"id":"days_since_account_disabling:UInt32?-instance-method","html_id":"days_since_account_disabling:UInt32?-instance-method","name":"days_since_account_disabling","doc":"The date (stored as the number of days since the epoch) since the user account has been disabled.","summary":"<p>The date (stored as the number of days since the epoch) since the user account has been disabled.</p>","abstract":false,"args":[],"args_string":" : UInt32?","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr#L24","def":{"name":"days_since_account_disabling","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32 | ::Nil","visibility":"Public","body":"@days_since_account_disabling"}},{"id":"days_since_account_disabling=(days_since_account_disabling:UInt32?)-instance-method","html_id":"days_since_account_disabling=(days_since_account_disabling:UInt32?)-instance-method","name":"days_since_account_disabling=","doc":"The date (stored as the number of days since the epoch) since the user account has been disabled.","summary":"<p>The date (stored as the number of days since the epoch) since the user account has been disabled.</p>","abstract":false,"args":[{"name":"days_since_account_disabling","doc":null,"default_value":"","external_name":"days_since_account_disabling","restriction":"UInt32 | ::Nil"}],"args_string":"(days_since_account_disabling : UInt32?)","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr#L28","def":{"name":"days_since_account_disabling=","args":[{"name":"days_since_account_disabling","doc":null,"default_value":"","external_name":"days_since_account_disabling","restriction":"UInt32 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@days_since_account_disabling = days_since_account_disabling"}},{"id":"days_validity:UInt32?-instance-method","html_id":"days_validity:UInt32?-instance-method","name":"days_validity","doc":"The number of days that must pass before the password must be changed.","summary":"<p>The number of days that must pass before the password must be changed.</p>","abstract":false,"args":[],"args_string":" : UInt32?","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr#L18","def":{"name":"days_validity","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32 | ::Nil","visibility":"Public","body":"@days_validity"}},{"id":"days_validity=(days_validity:UInt32?)-instance-method","html_id":"days_validity=(days_validity:UInt32?)-instance-method","name":"days_validity=","doc":"The number of days that must pass before the password must be changed.","summary":"<p>The number of days that must pass before the password must be changed.</p>","abstract":false,"args":[{"name":"days_validity","doc":null,"default_value":"","external_name":"days_validity","restriction":"UInt32 | ::Nil"}],"args_string":"(days_validity : UInt32?)","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr#L22","def":{"name":"days_validity=","args":[{"name":"days_validity","doc":null,"default_value":"","external_name":"days_validity","restriction":"UInt32 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@days_validity = days_validity"}},{"id":"encrypt(password:String,crypto:Algorithm=Algorithm::SHA512,salt:String?=Random::Secure.base64.rchop.rchop,days_last_change:UInt32?=(Time.utc-Time::UNIX_EPOCH).days.to_u32):UInt32-instance-method","html_id":"encrypt(password:String,crypto:Algorithm=Algorithm::SHA512,salt:String?=Random::Secure.base64.rchop.rchop,days_last_change:UInt32?=(Time.utc-Time::UNIX_EPOCH).days.to_u32):UInt32-instance-method","name":"encrypt","doc":"Encrypt a password. Can be used to create or update the password.","summary":"<p>Encrypt a password.</p>","abstract":false,"args":[{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"String"},{"name":"crypto","doc":null,"default_value":"Algorithm::SHA512","external_name":"crypto","restriction":"Algorithm"},{"name":"salt","doc":null,"default_value":"Random::Secure.base64.rchop.rchop","external_name":"salt","restriction":"String | ::Nil"},{"name":"days_last_change","doc":null,"default_value":"(Time.utc - Time::UNIX_EPOCH).days.to_u32","external_name":"days_last_change","restriction":"UInt32 | ::Nil"}],"args_string":"(password : String, crypto : Algorithm = <span class=\"t\">Algorithm</span><span class=\"t\">::</span><span class=\"t\">SHA512</span>, salt : String? = <span class=\"t\">Random</span><span class=\"t\">::</span><span class=\"t\">Secure</span>.base64.rchop.rchop, days_last_change : UInt32? = (<span class=\"t\">Time</span>.utc <span class=\"o\">-</span> <span class=\"t\">Time</span><span class=\"t\">::</span><span class=\"t\">UNIX_EPOCH</span>).days.to_u32) : UInt32","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr#L73","def":{"name":"encrypt","args":[{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"String"},{"name":"crypto","doc":null,"default_value":"Algorithm::SHA512","external_name":"crypto","restriction":"Algorithm"},{"name":"salt","doc":null,"default_value":"Random::Secure.base64.rchop.rchop","external_name":"salt","restriction":"String | ::Nil"},{"name":"days_last_change","doc":null,"default_value":"(Time.utc - Time::UNIX_EPOCH).days.to_u32","external_name":"days_last_change","restriction":"UInt32 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@crypto = crypto\n@salt = salt\n@days_last_change = days_last_change\ncrypto_salt = crypto.build + salt.to_s\n@hash = (String.new(LibC.crypt(password, crypto_salt))).lstrip(crypto_salt)\n@days_last_change\n"}},{"id":"hash:String?-instance-method","html_id":"hash:String?-instance-method","name":"hash","doc":"Password's hash.","summary":"<p>Password's hash.</p>","abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr#L12","def":{"name":"hash","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@hash"}},{"id":"salt:String?-instance-method","html_id":"salt:String?-instance-method","name":"salt","doc":"Password's salt.","summary":"<p>Password's salt.</p>","abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr#L10","def":{"name":"salt","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@salt"}},{"id":"verify(password:String):Bool-instance-method","html_id":"verify(password:String):Bool-instance-method","name":"verify","doc":"The password match the encrypted hash.","summary":"<p>The password match the encrypted hash.</p>","abstract":false,"args":[{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"String"}],"args_string":"(password : String) : Bool","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr#L87","def":{"name":"verify","args":[{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"self == (self.class.new(password, @crypto, @salt, @days_last_change))"}}],"macros":[],"types":[{"html_id":"github.com/j8r/libcrown/Libcrown/Password/Encryption","path":"Libcrown/Password/Encryption.html","kind":"enum","full_name":"Libcrown::Password::Encryption","name":"Encryption","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/j8r/libcrown/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/j8r/libcrown/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/j8r/libcrown/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/j8r/libcrown/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"password.cr","line_number":106,"url":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr"}],"repository_name":"github.com/j8r/libcrown","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"CertOnly","name":"CertOnly","value":"0","doc":null,"summary":null},{"id":"MD5","name":"MD5","value":"1","doc":null,"summary":null},{"id":"Blowfish","name":"Blowfish","value":"2","doc":null,"summary":null},{"id":"PasswordLocked","name":"PasswordLocked","value":"3","doc":null,"summary":null},{"id":"DefaultLock","name":"DefaultLock","value":"4","doc":null,"summary":null},{"id":"SHA256","name":"SHA256","value":"5","doc":null,"summary":null},{"id":"SHA512","name":"SHA512","value":"6","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/j8r/libcrown/Libcrown/Password","kind":"struct","full_name":"Libcrown::Password","name":"Password"},"doc":"Available password encryption types.","summary":"<p>Available password encryption types.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"blowfish?-instance-method","html_id":"blowfish?-instance-method","name":"blowfish?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr#L109","def":{"name":"blowfish?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Blowfish"}},{"id":"cert_only?-instance-method","html_id":"cert_only?-instance-method","name":"cert_only?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr#L107","def":{"name":"cert_only?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == CertOnly"}},{"id":"default_lock?-instance-method","html_id":"default_lock?-instance-method","name":"default_lock?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr#L111","def":{"name":"default_lock?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DefaultLock"}},{"id":"md5?-instance-method","html_id":"md5?-instance-method","name":"md5?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr#L108","def":{"name":"md5?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == MD5"}},{"id":"password_locked?-instance-method","html_id":"password_locked?-instance-method","name":"password_locked?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr#L110","def":{"name":"password_locked?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == PasswordLocked"}},{"id":"sha256?-instance-method","html_id":"sha256?-instance-method","name":"sha256?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr#L112","def":{"name":"sha256?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SHA256"}},{"id":"sha512?-instance-method","html_id":"sha512?-instance-method","name":"sha512?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password.cr#L113","def":{"name":"sha512?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SHA512"}}],"macros":[],"types":[]}]},{"html_id":"github.com/j8r/libcrown/Libcrown/PasswordState","path":"Libcrown/PasswordState.html","kind":"enum","full_name":"Libcrown::PasswordState","name":"PasswordState","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/j8r/libcrown/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/j8r/libcrown/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/j8r/libcrown/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/j8r/libcrown/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"password_state.cr","line_number":3,"url":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password_state.cr"}],"repository_name":"github.com/j8r/libcrown","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Hashed","name":"Hashed","value":"0","doc":null,"summary":null},{"id":"LoginDisabled","name":"LoginDisabled","value":"1","doc":null,"summary":null},{"id":"NISServer","name":"NISServer","value":"2","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/j8r/libcrown/Libcrown","kind":"struct","full_name":"Libcrown","name":"Libcrown"},"doc":"Reprents a password field. Only `/etc/shadow` is supported to store encrypted password.","summary":"<p>Reprents a password field.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"hashed?-instance-method","html_id":"hashed?-instance-method","name":"hashed?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password_state.cr#L4","def":{"name":"hashed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Hashed"}},{"id":"login_disabled?-instance-method","html_id":"login_disabled?-instance-method","name":"login_disabled?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password_state.cr#L5","def":{"name":"login_disabled?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LoginDisabled"}},{"id":"nis_server?-instance-method","html_id":"nis_server?-instance-method","name":"nis_server?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/password_state.cr#L6","def":{"name":"nis_server?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NISServer"}}],"macros":[],"types":[]},{"html_id":"github.com/j8r/libcrown/Libcrown/User","path":"Libcrown/User.html","kind":"struct","full_name":"Libcrown::User","name":"User","abstract":false,"superclass":{"html_id":"github.com/j8r/libcrown/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/j8r/libcrown/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/j8r/libcrown/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/j8r/libcrown/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"user.cr","line_number":4,"url":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/user.cr"}],"repository_name":"github.com/j8r/libcrown","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/j8r/libcrown/Libcrown","kind":"struct","full_name":"Libcrown","name":"Libcrown"},"doc":"Represents a user line of `/etc/passwd`.","summary":"<p>Represents a user line of <code>/etc/passwd</code>.</p>","class_methods":[],"constructors":[{"id":"new(name:String,gid:UInt32=100_u32,full_name:String=&quot;&quot;,gecos_comment:String=&quot;&quot;,home_directory:String=&quot;/&quot;,login_shell:String=&quot;/bin/false&quot;,password:PasswordState=PasswordState::Hashed)-class-method","html_id":"new(name:String,gid:UInt32=100_u32,full_name:String=&amp;quot;&amp;quot;,gecos_comment:String=&amp;quot;&amp;quot;,home_directory:String=&amp;quot;/&amp;quot;,login_shell:String=&amp;quot;/bin/false&amp;quot;,password:PasswordState=PasswordState::Hashed)-class-method","name":"new","doc":"Creates a new user.","summary":"<p>Creates a new user.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"gid","doc":null,"default_value":"100_u32","external_name":"gid","restriction":"UInt32"},{"name":"full_name","doc":null,"default_value":"\"\"","external_name":"full_name","restriction":"String"},{"name":"gecos_comment","doc":null,"default_value":"\"\"","external_name":"gecos_comment","restriction":"String"},{"name":"home_directory","doc":null,"default_value":"\"/\"","external_name":"home_directory","restriction":"String"},{"name":"login_shell","doc":null,"default_value":"\"/bin/false\"","external_name":"login_shell","restriction":"String"},{"name":"password","doc":null,"default_value":"PasswordState::Hashed","external_name":"password","restriction":"PasswordState"}],"args_string":"(name : String, gid : UInt32 = <span class=\"n\">100_u32</span>, full_name : String = <span class=\"s\">&quot;&quot;</span>, gecos_comment : String = <span class=\"s\">&quot;&quot;</span>, home_directory : String = <span class=\"s\">&quot;/&quot;</span>, login_shell : String = <span class=\"s\">&quot;/bin/false&quot;</span>, password : PasswordState = <span class=\"t\">PasswordState</span><span class=\"t\">::</span><span class=\"t\">Hashed</span>)","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/user.cr#L41","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"gid","doc":null,"default_value":"100_u32","external_name":"gid","restriction":"UInt32"},{"name":"full_name","doc":null,"default_value":"\"\"","external_name":"full_name","restriction":"String"},{"name":"gecos_comment","doc":null,"default_value":"\"\"","external_name":"gecos_comment","restriction":"String"},{"name":"home_directory","doc":null,"default_value":"\"/\"","external_name":"home_directory","restriction":"String"},{"name":"login_shell","doc":null,"default_value":"\"/bin/false\"","external_name":"login_shell","restriction":"String"},{"name":"password","doc":null,"default_value":"PasswordState::Hashed","external_name":"password","restriction":"PasswordState"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, gid, full_name, gecos_comment, home_directory, login_shell, password)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"full_name:String-instance-method","html_id":"full_name:String-instance-method","name":"full_name","doc":"Name is the user's real or display name.\nIt might be blank.\nThis is the first (or only) entry in the GECOS field list.","summary":"<p>Name is the user's real or display name.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/user.cr#L20","def":{"name":"full_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@full_name"}},{"id":"full_name=(full_name:String):String-instance-method","html_id":"full_name=(full_name:String):String-instance-method","name":"full_name=","doc":"Name is the user's real or display name.\nIt might be blank.\nThis is the first (or only) entry in the GECOS field list.","summary":"<p>Name is the user's real or display name.</p>","abstract":false,"args":[{"name":"full_name","doc":null,"default_value":"","external_name":"full_name","restriction":"String"}],"args_string":"(full_name : String) : String","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/user.cr#L21","def":{"name":"full_name=","args":[{"name":"full_name","doc":null,"default_value":"","external_name":"full_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@full_name = full_name\nvalidate_gecos(@full_name)\n"}},{"id":"gecos_comment:String-instance-method","html_id":"gecos_comment:String-instance-method","name":"gecos_comment","doc":"Comment field to add informations related to the user, excluding the first one (full name).","summary":"<p>Comment field to add informations related to the user, excluding the first one (full name).</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/user.cr#L28","def":{"name":"gecos_comment","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@gecos_comment"}},{"id":"gecos_comment=(gecos_comment:String):String-instance-method","html_id":"gecos_comment=(gecos_comment:String):String-instance-method","name":"gecos_comment=","doc":"Comment field to add informations related to the user, excluding the first one (full name).","summary":"<p>Comment field to add informations related to the user, excluding the first one (full name).</p>","abstract":false,"args":[{"name":"gecos_comment","doc":null,"default_value":"","external_name":"gecos_comment","restriction":"String"}],"args_string":"(gecos_comment : String) : String","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/user.cr#L29","def":{"name":"gecos_comment=","args":[{"name":"gecos_comment","doc":null,"default_value":"","external_name":"gecos_comment","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@gecos_comment = gecos_comment\nvalidate_gecos(@gecos_comment)\n"}},{"id":"gid:UInt32-instance-method","html_id":"gid:UInt32-instance-method","name":"gid","doc":"Primary group ID.","summary":"<p>Primary group ID.</p>","abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/user.cr#L16","def":{"name":"gid","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@gid"}},{"id":"gid=(gid:UInt32)-instance-method","html_id":"gid=(gid:UInt32)-instance-method","name":"gid=","doc":"Primary group ID.","summary":"<p>Primary group ID.</p>","abstract":false,"args":[{"name":"gid","doc":null,"default_value":"","external_name":"gid","restriction":"UInt32"}],"args_string":"(gid : UInt32)","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/user.cr#L20","def":{"name":"gid=","args":[{"name":"gid","doc":null,"default_value":"","external_name":"gid","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@gid = gid"}},{"id":"home_directory:String-instance-method","html_id":"home_directory:String-instance-method","name":"home_directory","doc":"Absolute path to the directory the user will be in when they log in. Defaults to `/` if not defined.","summary":"<p>Absolute path to the directory the user will be in when they log in.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/user.cr#L36","def":{"name":"home_directory","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@home_directory"}},{"id":"home_directory=(home_directory:String)-instance-method","html_id":"home_directory=(home_directory:String)-instance-method","name":"home_directory=","doc":"Absolute path to the directory the user will be in when they log in. Defaults to `/` if not defined.","summary":"<p>Absolute path to the directory the user will be in when they log in.</p>","abstract":false,"args":[{"name":"home_directory","doc":null,"default_value":"","external_name":"home_directory","restriction":"String"}],"args_string":"(home_directory : String)","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/user.cr#L40","def":{"name":"home_directory=","args":[{"name":"home_directory","doc":null,"default_value":"","external_name":"home_directory","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@home_directory = home_directory"}},{"id":"login_shell:String-instance-method","html_id":"login_shell:String-instance-method","name":"login_shell","doc":"Absolute path of a command (/bin/false) or shell (/bin/bash) executed at user's login.","summary":"<p>Absolute path of a command (/bin/false) or shell (/bin/bash) executed at user's login.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/user.cr#L38","def":{"name":"login_shell","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@login_shell"}},{"id":"login_shell=(login_shell:String)-instance-method","html_id":"login_shell=(login_shell:String)-instance-method","name":"login_shell=","doc":"Absolute path of a command (/bin/false) or shell (/bin/bash) executed at user's login.","summary":"<p>Absolute path of a command (/bin/false) or shell (/bin/bash) executed at user's login.</p>","abstract":false,"args":[{"name":"login_shell","doc":null,"default_value":"","external_name":"login_shell","restriction":"String"}],"args_string":"(login_shell : String)","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/user.cr#L42","def":{"name":"login_shell=","args":[{"name":"login_shell","doc":null,"default_value":"","external_name":"login_shell","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@login_shell = login_shell"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":"Unique user name.","summary":"<p>Unique user name.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/user.cr#L8","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"name=(name:String):String-instance-method","html_id":"name=(name:String):String-instance-method","name":"name=","doc":"Unique user name.","summary":"<p>Unique user name.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : String","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/user.cr#L9","def":{"name":"name=","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name = name\nLibcrown.validate_name(@name)\n"}},{"id":"password:PasswordState-instance-method","html_id":"password:PasswordState-instance-method","name":"password","doc":"Usually hashed password stored in `/etc/shadow`.","summary":"<p>Usually hashed password stored in <code>/etc/shadow</code>.</p>","abstract":false,"args":[],"args_string":" : PasswordState","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/user.cr#L40","def":{"name":"password","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"PasswordState","visibility":"Public","body":"@password"}},{"id":"password=(password:PasswordState)-instance-method","html_id":"password=(password:PasswordState)-instance-method","name":"password=","doc":"Usually hashed password stored in `/etc/shadow`.","summary":"<p>Usually hashed password stored in <code>/etc/shadow</code>.</p>","abstract":false,"args":[{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"PasswordState"}],"args_string":"(password : PasswordState)","source_link":"https://github.com/j8r/libcrown/blob/c54ca15847f49c6c7ce5d46dfc4248f32fd8281d/src/user.cr#L44","def":{"name":"password=","args":[{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"PasswordState"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@password = password"}}],"macros":[],"types":[]}]}]}})